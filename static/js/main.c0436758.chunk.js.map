{"version":3,"sources":["views/load-new/load-new.module.css","application.module.css","encryption/encryption.ts","views/fileview/fileview.module.css","database.ts","recoil/state.ts","hooks/use-async-effect.ts","components/cls.ts","components/box/box.tsx","components/button/button.tsx","components/modal/modal.tsx","components/textinput/textinput.tsx","hooks/use-focus-on-first-focusable.ts","components/user-popup-inputs/user-popup-inputs.tsx","views/encrypted-files/encrypted-files.tsx","views/load-new/load-new.tsx","utils.ts","views/load-new/utils.ts","views/load-new/error-message.tsx","views/load-new/copy-paste-content.tsx","views/load-new/upload-content.tsx","views/load-new/link-to-content.tsx","components/filetree/file.svg","components/filetree/folder.svg","components/filetree/filetree.tsx","views/fileview/fileview.tsx","components/about/vault-flow.png","components/about/about-content.tsx","components/about/about.tsx","application.tsx","hooks/use-delayed-effect.ts","index.tsx","components/filetree/filetree.module.css","components/about/about.module.css","components/box/box.module.css","components/button/button.module.css","components/user-popup-inputs/user-popup-inputs.module.css","encryption/domain.ts","views/encrypted-files/encrypted-files.module.css","views/encrypted-files/listview.module.css","components/modal/modal.module.css","encryption/arraybuffer-utils.ts","components/textinput/textinput.module.css"],"names":["module","exports","getRandomBits","bits","data","Uint8Array","crypto","getRandomValues","createPasswordKey","password","keyUsages","a","encoder","TextEncoder","subtle","importKey","encode","generateKey","salt","iterations","passwordkey","deriveBits","name","hash","splitKey","key","firstHalf","slice","secondHalf","Promise","all","convertToKey","length","encrypt","iv","encrypted","decrypt","encryptedData","init","k1","initWithK1","then","k2","k3","exportKey","encryptedK1","public","private","prepareLoad","publicConfig","expectedK3","k3Exported","expectedK3Exported","correctPassword","ArrayBufferUtils","load","Error","k1Raw","base64EncodeEncrypted","Buffer","from","toString","base64EncodePublic","config","exportedK3","base64DecodeEncrypted","base64DecodePublic","json","importedK3","appendData","Encryption","output","decoder","TextDecoder","decodedConfig","decrypted","decode","oldPassword","newPassword","newConfig","readBase64ToJson","base64","content","JSON","parse","EncodedEncryptedContent","e","either","left","store","Store","get","DB","set","value","del","clear","keys","list","storedKeys","map","listviewState","base","files","loadnewState","loadingFileviewState","file","atom","default","useAsyncEffect","asyncEffect","deps","effect","useCallback","useEffect","getClasses","type","undefined","split","Object","entries","filter","cls","args","flatMap","arg","join","Box","props","forwardRef","contentClass","header","footer","rest","className","css","box","ref","children","React","Button","flat","linkstyling","classNames","button","defaultProps","ModalWrapper","overlayClassName","modal","overlay","Textinput","autoComplete","input","focusOnFirstFocusable","element","focusable","querySelector","focus","useFocusOnFirstFocusable","container","done","useRef","setDone","current","useJustOnceEffect","renderPopup","componentType","resolve","tmp","document","createElement","body","appendChild","component","close","result","unmountComponentAtNode","removeChild","render","Alert","isOpen","contentRef","el","message","onClick","Confirm","Prompt","useState","setValue","secret","onChange","event","target","alert","confirm","promptSecret","encryption","ListOfFiles","setState","useSetRecoilState","state","elements","listviewCss","list_element","link_button","verifyPassword","decryptedString","filecontent","list_of_files","NoFiles","no_content","EncryptedFiles","Separator","separator","text","LoadNew","full_width","memoize","fn","previousArgskey","argskey","saveContent","base64Content","validation","isLeft","right","includes","ErrorMessage","field","touched","error","errormessage","useFormValidation","createFormHook","isRight","CopyPasteContent","disabled","valid","onSubmit","form","placeholder","fields","textarea","rows","combine","eventhandlers","handler","forEach","stopEvent","preventDefault","stopPropagation","readFileContent","reject","reader","FileReader","onload","onerror","readAsText","ContentViewer","setFile","UploadContent","inputRef","createRef","isHighlight","setHighlight","setError","setTouched","highlight","submitHandler","unhighlight","drophandler","dataTransfer","item","drag_container","onDragEnter","onDragOver","onDragLeave","onDrop","onBlur","fileupload_errormessage","link","url","URL","protocol","LinkToContent","fetch","response","status","statusText","_extends","assign","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","fill","d","SvgFile","_ref","svgRef","title","titleId","xmlns","viewBox","id","ForwardRef","SvgFolder","fileStructureComparator","first","second","isFile","localeCompare","DirectoryView","directory","showDirectory","selected","onFileSelected","sort","child","isDirectory","filepath","file_selected","height","open","setOpen","directory_wrapper","directory_open","prev","files_wrapper","Filetree","filestructure","useMemo","paths","root","path","workingRoot","dirs","filename","pop","dir","existingDir","find","newDirectory","push","parsePaths","wrapper","onSelect","Fileview","selectedFile","setSelectedFile","selectedContent","c","fileview","logo","src","process","alt","sidebar","buttons","lock_button","content_view","AboutContent","responsive_table","diagram","About","setIsOpen","open_link","onRequestClose","UnlockedLayer","currentState","useRecoilValue","startsWith","OpeningLayer","isOpening","onComplete","delay","memoized","setTimeout","useDelayedEffect","opening_layer","split_header","split_header__open","onTransitionEnd","pane","left_pane","logo_opening","right_pane","LockedLayer","useRecoilState","view","getView","logoclass","application","window","IDB","Application","appRoot","getElementById","Modal","setAppElement","ReactDOM","StrictMode","EncodedEncryptedData","t","EncodedEncryptionConfigPublic","equals","b","ArrayBuffer","byteLength","aTyped","bTyped","aligned32","ua","Uint32Array","buffer","byteOffset","ub","compare","equal32","aligned16","Uint16Array","equal16","equal8"],"mappings":"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","file":"static/js/main.c0436758.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"load-new_content__1Zgu-\",\"drag_container\":\"load-new_drag_container__2YhPG\",\"highlight\":\"load-new_highlight__33qdz\",\"separator\":\"load-new_separator__2TDBs\",\"textarea\":\"load-new_textarea__2_I2R\",\"errormessage\":\"load-new_errormessage__2-qW_\",\"fileupload_errormessage\":\"load-new_fileupload_errormessage__k8qbs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"application\":\"application_application__17vyi\",\"logo\":\"application_logo__24qsg\",\"logo_init\":\"application_logo_init__1LLdy\",\"logo_promptpassword\":\"application_logo_promptpassword__27QFN\",\"logo_opening\":\"application_logo_opening__3d1el\",\"logo_listview\":\"application_logo_listview__1OgEx\",\"logo_loadnew\":\"application_logo_loadnew__F6MhD\",\"logo_loadnew_uploadfile\":\"application_logo_loadnew_uploadfile__33rMg\",\"logo_loadnew_copypaste\":\"application_logo_loadnew_copypaste__cTBQ1\",\"logo_loadnew_linktofile\":\"application_logo_loadnew_linktofile__2hG9e\",\"content\":\"application_content__3TZTC\",\"header\":\"application_header__2rPO4\",\"opening_layer\":\"application_opening_layer__A5y29\",\"split_header\":\"application_split_header__3EqMq\",\"split_header__open\":\"application_split_header__open__3K7mo\",\"pane\":\"application_pane__3yENe\",\"left_pane\":\"application_left_pane__1ipYA\",\"right_pane\":\"application_right_pane__2OLQK\"};","import * as ArrayBufferUtils from './arraybuffer-utils';\nimport { TypedBuffer} from \"./arraybuffer-utils\";\nimport {EncodedEncryptedContent, EncodedEncryptedData, EncodedEncryptionConfigPublic} from \"./domain\";\nimport {Validation} from \"io-ts\";\nimport { either } from 'fp-ts';\n\ninterface EncryptedData {\n    iv: TypedBuffer;\n    data: ArrayBuffer;\n}\n\ninterface EncryptionConfigPublic {\n    salt: TypedBuffer;\n    encryptedK1: EncryptedData;\n    k3: CryptoKey;\n}\ninterface EncryptionConfigPrivate {\n    k1: CryptoKey;\n    k2: CryptoKey;\n}\ninterface EncryptionConfig {\n    public: EncryptionConfigPublic;\n    private: EncryptionConfigPrivate;\n}\n\nfunction getRandomBits(bits: number): TypedBuffer {\n    const data = new Uint8Array(bits / 8);\n    crypto.getRandomValues(data);\n    return data;\n}\n\nasync function createPasswordKey(password: string, keyUsages: KeyUsage[]): Promise<CryptoKey> {\n    const encoder = new TextEncoder();\n    return crypto.subtle.importKey(\n        'raw',\n        encoder.encode(password),\n        'PBKDF2',\n        false,\n        keyUsages\n    )\n}\n\nasync function generateKey(password: string, salt: TypedBuffer, iterations: number = 100_000): Promise<ArrayBuffer> {\n    const passwordkey = await createPasswordKey(password, ['deriveBits']);\n    return crypto.subtle.deriveBits(\n        {\n            name: 'PBKDF2',\n            salt: salt,\n            iterations: iterations,\n            hash: 'SHA-512'\n        },\n        passwordkey,\n        512\n    );\n}\n\nasync function splitKey(key: ArrayBuffer): Promise<[CryptoKey, CryptoKey]> {\n    const firstHalf = key.slice(0, 32);\n    const secondHalf = key.slice(32);\n\n    return Promise.all([\n        convertToKey(firstHalf, ['encrypt', 'decrypt']),\n        convertToKey(secondHalf, ['decrypt'])\n    ]);\n}\n\nasync function convertToKey(data: ArrayBuffer, keyUsages: KeyUsage[]) {\n    return crypto.subtle.importKey(\n        'raw',\n        data,\n        { name: 'AES-GCM', length: 256 },\n        true,\n        keyUsages\n    )\n}\n\nasync function encrypt(data: ArrayBuffer, key: CryptoKey): Promise<EncryptedData> {\n    const iv = getRandomBits(256);\n    const encrypted = await crypto.subtle.encrypt(\n        {\n            name: 'AES-GCM',\n            iv: iv\n        },\n        key,\n        data\n    );\n    return { iv, data: encrypted };\n}\n\nasync function decrypt(encryptedData: EncryptedData, key: CryptoKey): Promise<ArrayBuffer> {\n    return crypto.subtle.decrypt(\n        {\n            name: 'AES-GCM',\n            iv: encryptedData.iv\n        },\n        key,\n        encryptedData.data\n    )\n}\n\nasync function init(password: string) {\n    const k1 = await convertToKey(getRandomBits(256), ['encrypt', 'decrypt']);\n    return initWithK1(password, k1);\n}\n\nasync function initWithK1(password: string, k1: CryptoKey): Promise<EncryptionConfig> {\n    const salt = getRandomBits(128);\n    const [k2, k3] = await generateKey(password, salt).then(splitKey);\n    const encryptedK1 = await crypto.subtle.exportKey('raw', k1)\n        .then((key) => encrypt(key, k2));\n\n    return {\n        public: {\n            salt,\n            encryptedK1,\n            k3\n        },\n        private: {\n            k1,\n            k2\n        }\n    };\n}\n\ntype PreparedData = EncryptionConfigPublic & { k2: CryptoKey; correctPassword: boolean; }\nasync function prepareLoad(password: string, publicConfig: EncryptionConfigPublic): Promise<PreparedData> {\n    const { salt, k3: expectedK3 } = publicConfig;\n    const [k2, k3] = await generateKey(password, salt).then(splitKey);\n\n    const k3Exported = await crypto.subtle.exportKey('raw', k3);\n    const expectedK3Exported = await crypto.subtle.exportKey('raw', expectedK3);\n    const correctPassword = ArrayBufferUtils.equals(k3Exported, expectedK3Exported);\n    return {\n        ...publicConfig,\n        k2,\n        correctPassword,\n    }\n}\n\nasync function load(password: string, publicConfig: EncryptionConfigPublic): Promise<EncryptionConfig> {\n    const { correctPassword, encryptedK1, k2, k3, salt } = await prepareLoad(password, publicConfig);\n\n    if (!correctPassword) {\n        throw new Error(`Invalid password or data`);\n    }\n\n    const k1Raw = await decrypt(encryptedK1, k2);\n    const k1 = await convertToKey(k1Raw, ['encrypt', 'decrypt']);\n\n    return {\n        public: {\n            salt,\n            encryptedK1,\n            k3\n        },\n        private: {\n            k1,\n            k2\n        }\n    };\n}\n\nfunction base64EncodeEncrypted(encryptedData: EncryptedData): EncodedEncryptedData {\n    const iv = Buffer.from(encryptedData.iv).toString('base64');\n    const data = Buffer.from(encryptedData.data).toString('base64');\n    return { iv, data };\n}\n\nasync function base64EncodePublic(config: EncryptionConfigPublic): Promise<EncodedEncryptionConfigPublic> {\n    const salt = Buffer.from(config.salt).toString('base64');\n    const exportedK3 = await crypto.subtle.exportKey('raw', config.k3);\n    const k3 = Buffer.from(exportedK3).toString('base64')\n\n    return {\n        salt,\n        encryptedK1: base64EncodeEncrypted(config.encryptedK1),\n        k3\n    };\n}\n\nfunction base64DecodeEncrypted(encryptedData: EncodedEncryptedData): EncryptedData {\n    const iv = new Uint8Array(Buffer.from(encryptedData.iv, 'base64'));\n    const data = Buffer.from(encryptedData.data, 'base64');\n    return { iv, data };\n}\n\nasync function base64DecodePublic(json: EncodedEncryptionConfigPublic): Promise<EncryptionConfigPublic> {\n    const salt = new Uint8Array(Buffer.from(json.salt, 'base64'));\n    const importedK3 = Buffer.from(json.k3, 'base64');\n    const k3 = await crypto.subtle.importKey(\n        'raw',\n        importedK3,\n        { name: 'AES-GCM', length: 256 },\n        true,\n        ['decrypt']\n    );\n\n    return {\n        salt,\n        encryptedK1: base64DecodeEncrypted(json.encryptedK1),\n        k3\n    };\n}\n\nfunction appendData(config: EncodedEncryptionConfigPublic, data: EncodedEncryptedData): EncodedEncryptedContent {\n    return {\n        ...config,\n        data\n    }\n}\n\nexport default class Encryption {\n    async encrypt(password: string, data: string): Promise<EncodedEncryptedContent> {\n        const encoder = new TextEncoder();\n        const config = await init(password);\n        const encryptedData = await encrypt(encoder.encode(data), config.private.k1);\n\n        const output = await base64EncodePublic(config.public);\n        return appendData(output, base64EncodeEncrypted(encryptedData))\n    }\n\n    async decrypt(password: string, data: EncodedEncryptedContent): Promise<string> {\n        const decoder = new TextDecoder();\n        const decodedConfig = await base64DecodePublic(data);\n        const config = await load(password, decodedConfig);\n        const decrypted = await decrypt(base64DecodeEncrypted(data.data), config.private.k1);\n        return decoder.decode(decrypted);\n    }\n\n    async verifyPassword(password: string, data: EncodedEncryptedContent): Promise<boolean> {\n        const decodedConfig = await base64DecodePublic(data);\n        const config = await prepareLoad(password, decodedConfig);\n        return config.correctPassword;\n    }\n\n    async changePassword(oldPassword: string, newPassword: string, data: EncodedEncryptedContent): Promise<EncodedEncryptedContent> {\n        const decodedConfig = await base64DecodePublic(data);\n        const config = await load(oldPassword, decodedConfig);\n        const newConfig = await initWithK1(newPassword, config.private.k1);\n        const output = await base64EncodePublic(newConfig.public);\n        return appendData(output, data.data)\n    }\n}\n\nexport function readBase64ToJson(base64: string): Validation<EncodedEncryptedContent> {\n    try {\n        const content = Buffer.from(base64, 'base64').toString();\n        const json = JSON.parse(content);\n        return EncodedEncryptedContent.decode(json);\n    } catch (e) {\n        return either.left([]);\n    }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fileview\":\"fileview_fileview__2gs79\",\"logo\":\"fileview_logo__N0Yii\",\"header\":\"fileview_header__3Fv77\",\"sidebar\":\"fileview_sidebar__220W5\",\"buttons\":\"fileview_buttons__32cWN\",\"lock_button\":\"fileview_lock_button__22gJF\",\"content\":\"fileview_content__2ckSX\",\"content_view\":\"fileview_content_view__2iiHn\"};","import * as DB from 'idb-keyval';\nimport {Store} from 'idb-keyval';\nimport {EncodedEncryptedContent} from \"./encryption/domain\";\n\nconst store = new Store(\"vault\", \"vault\");\n\nexport function get(key: string): Promise<EncodedEncryptedContent> {\n    return DB.get(key, store);\n}\n\nexport function set(key: string, value: EncodedEncryptedContent): Promise<void> {\n    return DB.set(key, value, store);\n}\n\nexport function del(key: string): Promise<void> {\n    return DB.del(key, store);\n}\n\nexport function clear(): Promise<void> {\n    return DB.clear(store);\n}\n\nexport function keys(): Promise<string[]> {\n    return DB.keys(store) as Promise<string[]>;\n}\n\nexport async function list(): Promise<Array<[string, EncodedEncryptedContent]>> {\n    const storedKeys = await keys();\n    return await Promise.all(\n        storedKeys\n            .map((key) =>\n                get(key)\n                    .then((data) => [key, data] as [string, EncodedEncryptedContent])\n            )\n    );\n}\n","import {atom} from \"recoil\";\n\nexport interface State {\n    key: string;\n}\nexport type StateAlike<T extends State> = Omit<T, 'key'>;\n\nexport interface InitState extends State {\n    key: 'init';\n}\n\nexport interface ListviewState extends State {\n    key: 'listview';\n    files: string[];\n}\n\nexport interface PromptPasswordState extends State {\n    key: 'promptpassword';\n    files: string[];\n}\n\nexport interface LoadnewState extends State {\n    key: 'loadnew';\n    files: string[];\n}\n\nexport interface LoadnewStateCopyPaste extends State {\n    key: 'loadnew_copypaste';\n    files: string[];\n}\nexport interface LoadnewStateUploadFile extends State {\n    key: 'loadnew_uploadfile';\n    files: string[];\n}\nexport interface LoadnewStateLinkToFile extends State {\n    key: 'loadnew_linktofile';\n    files: string[];\n}\n\nexport interface FileviewState extends State {\n    key: 'fileview';\n    files: string[];\n    file: string;\n    content: Array<{ filepath: string; content: string; }>;\n}\n\nexport interface LoadingFileviewState extends State {\n    key: 'fileview_loading';\n    files: string[];\n    file: string;\n    content: Array<{ filepath: string; content: string; }>;\n}\n\nexport interface LockingFileviewState extends State {\n    key: 'fileview_locking';\n    files: string[];\n    file: string;\n    content: Array<{ filepath: string; content: string; }>;\n}\n\nexport type States = InitState | ListviewState | PromptPasswordState | LoadnewState | LoadnewStateCopyPaste |LoadnewStateLinkToFile | LoadnewStateUploadFile | LoadingFileviewState | FileviewState | LockingFileviewState;\n\nexport function initState(base: StateAlike<InitState>): InitState {\n    return { key: 'init' }\n}\nexport function listviewState(base: StateAlike<ListviewState>): ListviewState {\n    return { key: 'listview', files: base.files };\n}\nexport function promptPasswordState(base: StateAlike<PromptPasswordState>): PromptPasswordState {\n    return { key: 'promptpassword', files: base.files };\n}\nexport function loadnewState(base: StateAlike<LoadnewState>): LoadnewState {\n    return { key: 'loadnew', files: base.files };\n}\nexport function loadnewCopyPasteState(base: StateAlike<LoadnewStateCopyPaste>): LoadnewStateCopyPaste {\n    return { key: 'loadnew_copypaste', files: base.files };\n}\nexport function loadnewUploadFileState(base: StateAlike<LoadnewStateUploadFile>): LoadnewStateUploadFile {\n    return { key: 'loadnew_uploadfile', files: base.files };\n}\nexport function loadnewLinkToFileState(base: StateAlike<LoadnewStateLinkToFile>): LoadnewStateLinkToFile {\n    return { key: 'loadnew_linktofile', files: base.files };\n}\nexport function fileviewState(base: StateAlike<FileviewState>): FileviewState {\n    return { key: 'fileview', files: base.files, file: base.file, content: base.content };\n}\nexport function loadingFileviewState(base: StateAlike<LoadingFileviewState>): LoadingFileviewState {\n    return { key: 'fileview_loading', files: base.files, file: base.file, content: base.content };\n}\nexport function lockingFileviewState(base: StateAlike<LockingFileviewState>): LockingFileviewState {\n    return { key: 'fileview_locking', files: base.files, file: base.file, content: base.content };\n}\n\nexport function isFileviewAlike(base: States): base is FileviewState | LoadingFileviewState  {\n    return base.key.startsWith('fileview');\n}\n\nexport default atom<States>({\n    key: 'state',\n    default: { key: 'init' }\n})\n","import {DependencyList, EffectCallback, useCallback, useEffect} from 'react';\n\n/* eslint-disable react-hooks/exhaustive-deps */\nexport type AsyncEffectCallback = () => Promise<(void | (() => void | undefined))>;\nexport function useAsyncEffect(asyncEffect: AsyncEffectCallback, deps?: DependencyList) {\n    const effect: EffectCallback = useCallback(() => {\n        asyncEffect();\n        }, deps ?? []);\n    useEffect(effect, [effect]);\n}\n","type AcceptedTypes = string | null | undefined | { [key: string]: boolean }\n\nfunction getClasses(type: AcceptedTypes): Array<string> {\n    if (type === null) return []\n    else if (type === undefined) return []\n    else if (typeof type === 'string') return type.split(' ')\n    else {\n        return Object.entries(type)\n            .filter(([key, value]) => value && key !== 'undefined')\n            .map(([key, value]) => key)\n    }\n}\n\nexport default function cls(...args: Array<AcceptedTypes>): string {\n    return args\n        .flatMap((arg) => getClasses(arg))\n        .join(' ');\n}\n","import React, {Ref} from 'react';\nimport cls from './../cls';\nimport css from './box.module.css';\n\ntype HtmlProps = React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\ninterface Props extends HtmlProps {\n    contentClass?: string;\n    header: React.ReactNode;\n    footer?: React.ReactNode;\n}\n\nfunction Box(props: Props, forwardRef?: Ref<HTMLElement>) {\n    const { contentClass, header, footer, ...rest } = props;\n\n    return (\n        <section { ...rest } className={cls(css.box, props.className)} ref={forwardRef}>\n            <h1 className={css.header}>{header}</h1>\n            <div className={cls(css.content, contentClass)}>{props.children}</div>\n            {props.footer && <div className={css.footer}>{footer}</div> }\n        </section>\n    )\n}\n\nexport default React.forwardRef(Box);\n","import React from 'react';\nimport cls from './../cls';\nimport css from './button.module.css';\n\ntype HtmlProps = React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\ninterface Props extends HtmlProps {\n    flat: boolean;\n    linkstyling: boolean;\n}\n\nfunction Button(props: Props) {\n    const {flat, linkstyling, ...rest} = props;\n    const classNames = cls(\n        css.button,\n        props.className,\n        {\n            [css.flat]: flat,\n            [css.linkstyling]: linkstyling\n        }\n    );\n    return (\n        <button {...rest} className={classNames}/>\n    )\n}\n\nButton.defaultProps = {\n    flat: false,\n    linkstyling: false\n}\n\nexport default Button;\n","import React from 'react';\nimport Modal from 'react-modal';\nimport css from './modal.module.css';\nimport cls from \"../cls\";\n\nexport function setAppElement(element: string | HTMLElement) {\n    Modal.setAppElement(element)\n}\n\ninterface ModalWrapperProps extends Omit<Modal.Props, 'className' | 'overlayClassName'> {\n    children: React.ReactNode;\n    className?: string;\n    overlayClassName?: string;\n}\n\nfunction ModalWrapper(props: ModalWrapperProps) {\n    const { className, overlayClassName, ...rest } = props;\n    return (\n        <Modal\n            className={cls(css.modal, className)}\n            overlayClassName={cls(css.overlay, overlayClassName)}\n            {...rest}\n        />\n    );\n}\n\nexport default ModalWrapper;\n","import React from 'react';\nimport cls from './../cls';\nimport css from './textinput.module.css';\n\ntype HtmlProps = React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\ninterface Props extends HtmlProps {\n}\n\nfunction Textinput(props: Props) {\n    return (\n        <input\n            type=\"text\"\n            autoComplete=\"off\"\n            {...props}\n            className={cls(css.input, props.className)}\n        />\n    )\n}\n\nexport default Textinput;\n","import {DependencyList, MutableRefObject, useCallback, useEffect, useRef} from \"react\";\n\nexport type JustOnceEffectCallback = (done: () => void) => void | (() => void | undefined);\nexport function useJustOnceEffect(effect: JustOnceEffectCallback, deps?: DependencyList) {\n    const done = useRef(false);\n    const setDone = useCallback(() => {\n        done.current = true;\n    }, [done]);\n    useEffect(() => {\n        if (!done.current) {\n            return effect(setDone);\n        }\n    }, deps); // eslint-disable-line react-hooks/exhaustive-deps\n}\n\nexport function focusOnFirstFocusable(element: HTMLElement | null) {\n    const focusable = element\n        ?.querySelector<HTMLElement>('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])');\n\n    if (focusable) {\n        focusable.focus();\n        return true;\n    }\n    return false;\n}\n\nexport function useFocusOnFirstFocusable(container: MutableRefObject<HTMLElement | null>) {\n    const element = container.current\n    useJustOnceEffect((done) => {\n        const focused = focusOnFirstFocusable(container.current);\n        if (focused) {\n            done();\n        }\n    }, [element]);\n}\n","import React, {createElement, useState} from 'react';\nimport {render, unmountComponentAtNode} from 'react-dom';\nimport Modal from '../modal/modal';\nimport Button from \"../button/button\";\nimport TextInput from '../textinput/textinput';\nimport css from './user-popup-inputs.module.css';\nimport {focusOnFirstFocusable} from \"../../hooks/use-focus-on-first-focusable\";\n\ntype PopupComponentProps<RESULT, PROPS> = { close(result: RESULT): void; } & PROPS;\ntype PopupComponent<RESULT, PROPS> = React.ComponentType<PopupComponentProps<RESULT, PROPS>>\n\nfunction renderPopup<RESULT, PROPS>(componentType: PopupComponent<RESULT, PROPS>, props: PROPS): Promise<RESULT> {\n    return new Promise((resolve) => {\n        const tmp = document.createElement('div');\n        document.body.appendChild(tmp);\n\n        const close: (result: RESULT) => void = (result: RESULT) => {\n            unmountComponentAtNode(tmp);\n            document.body.removeChild(tmp);\n            resolve(result);\n        }\n        const component = createElement(componentType, {...props, close});\n\n        render(component, tmp);\n    });\n}\n\ntype AlertProps = { message: string };\n\nfunction Alert(props: PopupComponentProps<void, AlertProps>) {\n    return (\n        <Modal className={css.modal} isOpen={true} contentRef={el => focusOnFirstFocusable(el)}>\n            <p>{props.message}</p>\n            <Button onClick={() => props.close()}>OK</Button>\n        </Modal>\n    );\n}\n\ntype ConfirmProps = { message: string };\n\nfunction Confirm(props: PopupComponentProps<boolean, ConfirmProps>) {\n    return (\n        <Modal className={css.modal} isOpen={true} contentRef={el => focusOnFirstFocusable(el)}>\n            <p>{props.message}</p>\n            <Button onClick={() => props.close(true)}>OK</Button>\n            <Button flat onClick={() => props.close(false)}>Cancel</Button>\n        </Modal>\n    );\n}\n\ntype PromptProps = { message: string; secret: boolean; };\n\nfunction Prompt(props: PopupComponentProps<string | null, PromptProps>) {\n    const [value, setValue] = useState(\"\")\n    return (\n        <Modal className={css.modal} isOpen={true} contentRef={el => focusOnFirstFocusable(el)}>\n            <form>\n                <p>{props.message}</p>\n                <TextInput\n                    type={props.secret ? 'password' : 'text'}\n                    className=\"block-m\"\n                    value={value}\n                    onChange={(event) => setValue(event.target.value)}\n                />\n                <Button onClick={() => props.close(value)}>OK</Button>\n                <Button type=\"button\" flat onClick={() => props.close(null)}>Cancel</Button>\n            </form>\n        </Modal>\n    );\n}\n\n\nexport function alert(message: string): Promise<void> {\n    return renderPopup(Alert, {message});\n}\n\nexport function confirm(message: string): Promise<boolean> {\n    return renderPopup(Confirm, {message});\n}\n\nexport function prompt(message: string): Promise<string | null> {\n    return renderPopup(Prompt, {message, secret: false});\n}\n\nexport function promptSecret(message: string): Promise<string | null> {\n    return renderPopup(Prompt, {message, secret: true});\n}\n","import React from 'react';\nimport state, {\n    listviewState,\n    ListviewState,\n    loadingFileviewState,\n    loadnewState,\n    promptPasswordState,\n    StateAlike\n} from \"../../recoil/state\";\nimport css from './encrypted-files.module.css';\nimport listviewCss from './listview.module.css';\nimport {useSetRecoilState} from \"recoil\";\nimport Box from '../../components/box/box';\nimport Button from \"../../components/button/button\";\nimport * as DB from '../../database';\nimport Encryption from \"../../encryption/encryption\";\nimport {alert, promptSecret} from \"../../components/user-popup-inputs/user-popup-inputs\";\n\ninterface ListProps extends StateAlike<ListviewState> {\n}\n\nconst encryption = new Encryption()\nfunction ListOfFiles(props: ListProps) {\n    const setState = useSetRecoilState(state);\n    const clickHandler = (file: string) => async () => {\n        setState(promptPasswordState(props));\n        const content = await DB.get(file);\n        const password = await promptSecret(`Password for ${file}?`)\n        if (password == null) {\n            setState(listviewState(props));\n        } else if (!await encryption.verifyPassword(password, content)) {\n            await alert('Invalid password');\n            setState(listviewState(props));\n        } else {\n            const decryptedString = await encryption.decrypt(password, content)\n            const filecontent = JSON.parse(decryptedString);\n\n            setState(loadingFileviewState({ file, files: props.files, content: filecontent }));\n        }\n    }\n    const elements = props.files\n        .map((element) => (\n            <li className={listviewCss.list_element} key={element}>\n                <button className={css.link_button} onClick={clickHandler(element)}>{element}</button>\n            </li>\n        ));\n\n    return (\n        <ul className={listviewCss.list_of_files}>\n            {elements}\n        </ul>\n    );\n}\n\nfunction NoFiles() {\n    return (\n        <div className={css.no_content}>\n            <p>No local files</p>\n        </div>\n    );\n}\n\ninterface Props {\n    state: ListviewState;\n    className?: string;\n}\n\nfunction EncryptedFiles(props: Props) {\n    const files = props.state.files;\n    const setState = useSetRecoilState(state);\n    const loadfileCallback = () => setState(loadnewState({files}));\n    const content = files.length === 0 ? <NoFiles/> : <ListOfFiles files={files}/>\n\n    const header: React.ReactNode = \"List of loaded files\";\n    const footer: React.ReactNode = (\n        <>\n            <span />\n            <Button onClick={loadfileCallback}>Load new file</Button>\n        </>\n    );\n\n    return (\n        <Box header={header} footer={footer} className={props.className}>\n            {content}\n        </Box>\n    )\n}\n\nexport default EncryptedFiles;\n","import React, {useRef} from 'react';\nimport state, {\n    listviewState,\n    loadnewCopyPasteState, loadnewLinkToFileState,\n    LoadnewState,\n    loadnewUploadFileState,\n    StateAlike,\n} from \"../../recoil/state\";\nimport Box from \"../../components/box/box\";\nimport Button from \"../../components/button/button\";\nimport css from './load-new.module.css';\nimport {useSetRecoilState} from \"recoil\";\nimport {useFocusOnFirstFocusable} from \"../../hooks/use-focus-on-first-focusable\";\n\ninterface Props {\n    state: StateAlike<LoadnewState>;\n}\n\nfunction Separator(props: { text: string }) {\n    return (\n        <div className={css.separator}>\n            {props.text}\n        </div>\n    );\n}\n\nfunction LoadNew(props: Props) {\n    const container = useRef<HTMLElement>(null)\n    useFocusOnFirstFocusable(container);\n\n    const setState = useSetRecoilState(state);\n    const backHandler = () => { setState(listviewState(props.state)) };\n    let copyPasteHandler = () => { setState(loadnewCopyPasteState(props.state)) };\n    let uploadHandler = () => { setState(loadnewUploadFileState(props.state)) };\n    let linkToFileHandler = () => { setState(loadnewLinkToFileState(props.state)) };\n\n    const header: React.ReactNode = \"Load new file\";\n    const footer: React.ReactNode = (\n        <>\n            <Button onClick={backHandler}>Back</Button>\n            <span />\n        </>\n    );\n\n    return (\n        <Box ref={container} contentClass={css.content} header={header} footer={footer}>\n            <Button className={css.full_width} onClick={copyPasteHandler}>Copy/Paste content</Button>\n            <Separator text=\"Or\"/>\n            <Button className={css.full_width} onClick={uploadHandler}>Upload file</Button>\n            <Separator text=\"Or\"/>\n            <Button className={css.full_width} onClick={linkToFileHandler}>Link to file</Button>\n        </Box>\n    )\n}\n\nexport default LoadNew;\n","export function memoize<R, T extends (...args: any[]) => R>(fn: T): T {\n    let previousArgskey: string | undefined = undefined;\n    let value: R | undefined = undefined;\n\n    const proxy = (...args: any[]) => {\n        const argskey = args.join();\n        if (argskey !== previousArgskey) {\n            previousArgskey = argskey;\n            value = fn(...args)\n        }\n        return value;\n    }\n\n    return proxy as T;\n}\n","import {SetterOrUpdater} from \"recoil\";\nimport * as DB from \"../../database\";\nimport {listviewState, States} from \"../../recoil/state\";\nimport {alert, confirm, promptSecret} from '../../components/user-popup-inputs/user-popup-inputs';\nimport Encryption, {readBase64ToJson} from \"../../encryption/encryption\";\nimport {isLeft} from \"fp-ts/Either\";\n\nconst encryption = new Encryption();\nexport async function saveContent(name: string, base64Content: string, setState: SetterOrUpdater<States>) {\n    const validation = readBase64ToJson(base64Content);\n    if (isLeft(validation)) {\n        await alert(\"Invalid content\");\n        return;\n    }\n    const data = validation.right;\n\n    const password = await promptSecret(\"Password?\");\n    if (password === null) {\n        return;\n    }\n    const correntPassowrd = await encryption.verifyPassword(password, data);\n    if (!correntPassowrd) {\n        await alert(\"Wrong password.\");\n        return;\n    }\n\n    const existingKeys = await DB.keys();\n    const store = existingKeys.includes(name) ? await confirm(`Override content of ${name}?`) : true;\n\n    if (store) {\n        await DB.set(name, data);\n        const keys = await DB.keys();\n        setState(listviewState({files: keys}));\n    }\n}\n","import React from \"react\";\nimport {FieldState} from \"@nutgaard/use-formstate\";\nimport cls from \"../../components/cls\";\nimport css from \"./load-new.module.css\";\n\ninterface Props {\n    field: Pick<FieldState, 'touched' | 'error'>;\n    className?: string;\n}\n\nfunction ErrorMessage(props: Props) {\n    const showError = props.field.touched && props.field.error !== undefined;\n    const content = showError ? `* ${props.field.error}` : ' ';\n    return (\n        <span className={cls(css.errormessage, props.className)}>{content}</span>\n    );\n}\n\nexport default ErrorMessage;\n","import React, {useRef} from \"react\";\nimport createFormHook from '@nutgaard/use-formstate';\nimport css from \"./load-new.module.css\";\nimport {readBase64ToJson} from \"../../encryption/encryption\";\nimport {isRight} from \"fp-ts/Either\";\nimport state, {loadnewState, LoadnewState, StateAlike} from \"../../recoil/state\";\nimport Box from \"../../components/box/box\";\nimport Button from \"../../components/button/button\";\nimport {useSetRecoilState} from \"recoil\";\nimport {memoize} from \"../../utils\";\nimport {saveContent} from \"./utils\";\nimport {useFocusOnFirstFocusable} from \"../../hooks/use-focus-on-first-focusable\";\nimport Textinput from \"../../components/textinput/textinput\";\nimport ErrorMessage from \"./error-message\";\n\ninterface Props {\n    state: StateAlike<LoadnewState>;\n}\n\ntype FormData = { name: string; data: string; };\nconst useFormValidation = createFormHook<FormData>({\n    name: (value: string) => {\n        return value.length > 0 ? undefined : 'Name is required'\n    },\n    data: memoize((value: string) => {\n        if (value.length === 0) {\n            return \"Content is required\"\n        }\n        const validation = readBase64ToJson(value);\n        return isRight(validation) ? undefined : \"Invalid content\";\n    })\n});\n\nfunction CopyPasteContent(props: Props) {\n    const container = useRef<HTMLFormElement>(null)\n    useFocusOnFirstFocusable(container);\n    const setState = useSetRecoilState(state);\n    const validation = useFormValidation({name: \"\", data: \"\"});\n\n    const backHandler = () => {\n        setState(loadnewState(props.state))\n    };\n    const submitHandler = (form: FormData) => saveContent(form.name, form.data, setState);\n\n    const header: React.ReactNode = \"Copy/Paste content\";\n    const footer: React.ReactNode = (\n        <>\n            <Button type=\"button\" onClick={backHandler}>Back</Button>\n            <Button disabled={!validation.valid}>Load content</Button>\n        </>\n    );\n\n    return (\n        <form ref={container} onSubmit={validation.onSubmit(submitHandler)}>\n            <Box contentClass={css.content} header={header} footer={footer}>\n                <Textinput\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    {...validation.fields.name.input}\n                />\n                <ErrorMessage className=\"block-s\" field={validation.fields.name} />\n\n                <textarea\n                    className={css.textarea}\n                    placeholder=\"Base64 content\"\n                    rows={5}\n                    autoComplete=\"off\"\n                    {...validation.fields.data.input}\n                />\n                <ErrorMessage field={validation.fields.data} />\n            </Box>\n        </form>\n    );\n}\n\nexport default CopyPasteContent;\n","import React, {\n    ChangeEvent,\n    DragEventHandler,\n    EventHandler,\n    MouseEvent,\n    RefObject,\n    SyntheticEvent, useRef,\n    useState\n} from \"react\";\nimport css from \"./load-new.module.css\";\nimport {useSetRecoilState} from \"recoil\";\nimport state, {loadnewState, LoadnewState, StateAlike} from \"../../recoil/state\";\nimport cls from \"../../components/cls\";\nimport {useAsyncEffect} from \"../../hooks/use-async-effect\";\nimport Button from \"../../components/button/button\";\nimport Box from \"../../components/box/box\";\nimport {useFocusOnFirstFocusable} from \"../../hooks/use-focus-on-first-focusable\";\nimport {readBase64ToJson} from \"../../encryption/encryption\";\nimport {isRight} from \"fp-ts/Either\";\nimport ErrorMessage from \"./error-message\";\nimport {saveContent} from \"./utils\";\n\nfunction combine<T extends EventHandler<any>>(...eventhandlers: T[]): T {\n    const handler = (event: any) => {\n        eventhandlers.forEach((handler) => handler(event));\n    }\n    return handler as T;\n}\n\nfunction stopEvent<S extends SyntheticEvent>(event: S) {\n    event.preventDefault();\n    event.stopPropagation();\n}\n\nfunction readFileContent(file: File): Promise<string> {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = (event) => {\n            resolve(event.target?.result as string)\n        }\n        reader.onerror = (event) => {\n            reject(event);\n        }\n\n        reader.readAsText(file);\n    })\n}\n\nfunction ContentViewer(props: { file?: File; setFile: (file?: File) => void; input: RefObject<HTMLInputElement> }) {\n    if (props.file) {\n        const removeHandler = (e: MouseEvent) => {\n            e.preventDefault();\n            if (props.input.current) {\n                props.input.current.value = '';\n            }\n            props.setFile(undefined)\n        };\n\n        return (<>\n            <span>{props.file.name}</span>\n            <Button onClick={removeHandler}>Remove</Button>\n        </>);\n    } else {\n        return (\n            <>\n                <strong>Choose a file</strong><span> or drag it here</span>.\n            </>\n        );\n    }\n}\n\ninterface Props {\n    state: StateAlike<LoadnewState>;\n}\n\nfunction UploadContent(props: Props) {\n    const container = useRef<HTMLFormElement>(null)\n    useFocusOnFirstFocusable(container);\n    const setState = useSetRecoilState(state);\n    const inputRef = React.createRef<HTMLInputElement>();\n    const [file, setFile] = useState<File | undefined>(undefined);\n    const [isHighlight, setHighlight] = useState(false);\n\n    const [error, setError] = useState<string | undefined>(undefined);\n    const [touched, setTouched] = useState<boolean>(false);\n\n    useAsyncEffect(async () => {\n        if (file === undefined) {\n            setError(\"File is required\");\n        } else {\n            const content = await readFileContent(file);\n            const validation = readBase64ToJson(content);\n            setError(isRight(validation) ? undefined : \"Invalid content\");\n        }\n    }, [file, setError])\n\n    const highlight = combine(stopEvent, () => {\n        setHighlight(true)\n    });\n\n    const backHandler = () => { setState(loadnewState(props.state)) };\n    const submitHandler = async (event: React.FormEvent) => {\n        event.preventDefault();\n        if (file) {\n            const content = await readFileContent(file)\n            await saveContent(file.name, content, setState)\n        }\n    }\n    const unhighlight = combine(stopEvent, () => {\n        setHighlight(false)\n    });\n\n    const drophandler = combine<DragEventHandler>(unhighlight, (event) => {\n        const dataTransfer = event.dataTransfer;\n        const file: File = dataTransfer.files.item(0)!!;\n        setTouched(true);\n        setFile(file);\n    });\n\n    const changehandler = (event: ChangeEvent<HTMLInputElement>) => {\n        stopEvent(event);\n        const file: File = event.target?.files?.item(0)!!;\n        setTouched(true);\n        setFile(file);\n    };\n\n    const header: React.ReactNode = \"Upload file\";\n    const footer: React.ReactNode = (\n        <>\n            <Button type=\"button\" onClick={backHandler}>Back</Button>\n            <Button disabled={error !== undefined}>Load content</Button>\n        </>\n    );\n\n    return (\n        <form ref={container} onSubmit={submitHandler}>\n            <Box contentClass={css.content} header={header} footer={footer}>\n                <label\n                    className={cls(css.drag_container, isHighlight ? css.highlight : '', 'block-s')}\n                    onDragEnter={highlight}\n                    onDragOver={highlight}\n                    onDragLeave={unhighlight}\n                    onDrop={drophandler}\n                    onBlur={() => setTouched(true)}\n                >\n                    <ContentViewer file={file} setFile={setFile} input={inputRef}/>\n                    <input type=\"file\" name=\"files[]\" ref={inputRef} onChange={changehandler}/>\n                    <ErrorMessage field={{ touched, error }} className={css.fileupload_errormessage} />\n                </label>\n            </Box>\n        </form>\n    );\n}\n\nexport default UploadContent;\n","import React, {useRef} from \"react\";\nimport css from \"./load-new.module.css\";\nimport state, {loadnewState, LoadnewState, StateAlike} from \"../../recoil/state\";\nimport {useSetRecoilState} from \"recoil\";\nimport Button from \"../../components/button/button\";\nimport Box from \"../../components/box/box\";\nimport TextInput from '../../components/textinput/textinput';\nimport {useFocusOnFirstFocusable} from \"../../hooks/use-focus-on-first-focusable\";\nimport createFormHook from \"@nutgaard/use-formstate\";\nimport {memoize} from \"../../utils\";\nimport {saveContent} from \"./utils\";\nimport Textinput from \"../../components/textinput/textinput\";\nimport ErrorMessage from \"./error-message\";\nimport {alert} from \"../../components/user-popup-inputs/user-popup-inputs\";\n\ninterface Props {\n    state: StateAlike<LoadnewState>;\n}\n\ntype FormData = { name: string; link: string; };\nconst useFormValidation = createFormHook<FormData>({\n    name: (value: string) => {\n        return value.length > 0 ? undefined : 'Name is required'\n    },\n    link: memoize((value: string) => {\n        if (value.length === 0) {\n            return \"Link is required\";\n        }\n\n        try {\n            const url = new URL(value);\n            if (url.protocol === 'http:') {\n                return 'Insecure protocol, use https.';\n            } else if (url.protocol !== 'https:') {\n                return `Unknown protocol: ${url.protocol}`;\n            } else {\n                return undefined;\n            }\n        } catch (e) {\n            return 'Invalid URL'\n        }\n    })\n});\n\nfunction LinkToContent(props: Props) {\n    const container = useRef<HTMLFormElement>(null)\n    useFocusOnFirstFocusable(container);\n    const setState = useSetRecoilState(state);\n    const validation = useFormValidation({name: \"\", link: \"\"});\n\n    const backHandler = () => {\n        setState(loadnewState(props.state))\n    };\n    const submitHandler = async (form: FormData) => {\n        const response = await fetch(form.link);\n        if (response.status !== 200) {\n            await alert(`File download failed: ${response.status} ${response.statusText}`)\n            return;\n        }\n        const data = await response.text();\n        return saveContent(form.name, data, setState)\n    };\n\n    const header: React.ReactNode = \"Link to file\";\n    const footer: React.ReactNode = (\n        <>\n            <Button type=\"button\" onClick={backHandler}>Back</Button>\n            <Button disabled={!validation.valid}>Load content</Button>\n        </>\n    );\n\n    return (\n        <form ref={container} onSubmit={validation.onSubmit(submitHandler)}>\n            <Box contentClass={css.content} header={header} footer={footer}>\n                <Textinput\n                    placeholder=\"Name\"\n                    {...validation.fields.name.input}\n                />\n                <ErrorMessage className=\"block-s\" field={validation.fields.name} />\n\n                <TextInput\n                    placeholder=\"Link\"\n                    {...validation.fields.link.input}\n                />\n                <ErrorMessage className=\"block-s\" field={validation.fields.link} />\n            </Box>\n        </form>\n    );\n}\n\nexport default LinkToContent;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M134.0649,27.83113c-1.60216,-1.57632 -3.25601,-3.20433 -4.88401,-4.83233c-1.65385,-1.62801 -3.25601,-3.28185 -4.85817,-4.90986c-11.31851,-11.55108 -18.0631,-18.08894 -25.09195,-18.08894h-52.92308c-14.57452,0 -26.46154,11.88702 -26.46154,26.46154v119.07692c0,14.57452 11.88702,26.46154 26.46154,26.46154h79.38462c14.57452,0 26.46154,-11.88702 26.46154,-26.46154v-92.61538c0,-7.02885 -6.53786,-13.77344 -18.08894,-25.09195zM138.92308,145.53846c0,7.3131 -5.91767,13.23077 -13.23077,13.23077h-79.38462c-7.3131,0 -13.23077,-5.91767 -13.23077,-13.23077v-119.07692c0,-7.3131 5.91767,-13.23077 13.23077,-13.23077l48.21996,-0.02584c4.78065,1.21454 4.70312,7.08053 4.70312,12.94651v20.15625c0,3.64363 2.97176,6.61538 6.61538,6.61538h19.84615c6.58954,0 13.23077,0.02584 13.23077,6.61538z\"\n});\n\nfunction SvgFile(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 172 172\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFile);\nexport default __webpack_public_path__ + \"static/media/file.0403bb2b.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M19.84615,13.23077c-10.95673,0 -19.84615,8.88942 -19.84615,19.84615v112.46154c0,10.95673 8.88942,19.84615 19.84615,19.84615h132.30769c10.95673,0 19.84615,-8.88942 19.84615,-19.84615v-92.61538c0,-10.95673 -8.88942,-19.84615 -19.84615,-19.84615h-79.38462c0,-10.95673 -8.88942,-19.84615 -19.84615,-19.84615zM19.84615,46.30769h132.30769c3.64363,0 6.61538,2.97176 6.61538,6.61538v92.61538c0,3.64363 -2.97176,6.61538 -6.61538,6.61538h-132.30769c-3.64363,0 -6.61538,-2.97176 -6.61538,-6.61538v-92.61538c0,-3.64363 2.97176,-6.61538 6.61538,-6.61538z\"\n});\n\nfunction SvgFolder(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 172 172\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFolder);\nexport default __webpack_public_path__ + \"static/media/folder.b5544993.svg\";\nexport { ForwardRef as ReactComponent };","import React, {useMemo, useState} from 'react';\nimport cls from './../cls';\nimport css from './filetree.module.css';\nimport {ReactComponent as FileSvg} from './file.svg';\nimport {ReactComponent as FolderSvg} from './folder.svg';\n\ninterface Props {\n    files: string[];\n    selected: string | null;\n\n    onSelect(file: string): void;\n}\n\nexport type File = { filepath: string; name: string; isFile: true; isDirectory: false; };\nexport type Directory = { name: string; isFile: false; isDirectory: true; children: FileStructure };\nexport type FileStructure = Array<File | Directory>;\n\nexport function parsePaths(paths: string[]): Directory {\n    const root: Directory = {\n        name: '_',\n        isFile: false,\n        isDirectory: true,\n        children: []\n    };\n\n    paths.forEach((path) => {\n        let workingRoot: Directory = root;\n        const dirs = path.split('/');\n        const filename: string = dirs.pop()!;\n\n        for (const dir of dirs) {\n            const existingDir: Directory | undefined = workingRoot.children\n                .find((child) => child.isDirectory && child.name === dir) as Directory | undefined;\n\n            if (existingDir !== undefined) {\n                workingRoot = existingDir;\n            } else {\n                const newDirectory: Directory = {\n                    name: dir,\n                    isDirectory: true,\n                    isFile: false,\n                    children: []\n                };\n                workingRoot.children.push(newDirectory);\n                workingRoot = newDirectory;\n            }\n        }\n        workingRoot.children.push({\n            filepath: path,\n            name: filename,\n            isFile: true,\n            isDirectory: false\n        })\n    });\n\n    return root;\n}\n\ninterface DirectoryViewProps {\n    directory: Directory;\n    showDirectory: boolean;\n    selected: string | null;\n\n    onFileSelected(file: string): void;\n}\n\nfunction fileStructureComparator(first: File | Directory, second: File | Directory): number {\n    if (first.isFile && !second.isFile) {\n        return -1;\n    } else if (!first.isFile && second.isFile) {\n        return 1;\n    } else {\n        return first.name.localeCompare(second.name);\n    }\n}\n\nfunction DirectoryView(props: DirectoryViewProps) {\n    const {directory, showDirectory, selected, onFileSelected} = props;\n\n    const content = directory.children\n        .sort(fileStructureComparator)\n        .map((child, i) => {\n            if (child.isDirectory) {\n                return (\n                    <DirectoryView\n                        key={child.name}\n                        directory={child}\n                        showDirectory={true}\n                        selected={selected}\n                        onFileSelected={onFileSelected}\n                    />\n                );\n            } else {\n                return (\n                    <button\n                        key={child.filepath}\n                        className={cls(css.file, child.filepath === selected ? css.file_selected : null)}\n                        onClick={() => onFileSelected(child.filepath)}\n                    >\n                        <FileSvg height=\"16\"/>\n                        {child.name}\n                    </button>\n                );\n            }\n        });\n    const [open, setOpen] = useState<boolean>(false);\n\n    if (showDirectory) {\n        return (\n            <div className={css.directory_wrapper}>\n                <button className={cls(css.directory, open ? css.directory_open : null)}\n                        onClick={() => setOpen((prev) => !prev)}\n                >\n                    <FolderSvg height=\"16\"/>\n                    {directory.name}\n                </button>\n                <div className={cls(css.files_wrapper)}>\n                    {open ? content : null}\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <>\n            {content}\n        </>\n    );\n}\n\nfunction Filetree(props: Props) {\n    const {files} = props;\n    const filestructure = useMemo(() => parsePaths(files), [files])\n\n    return (\n        <div className={cls(css.wrapper)}>\n            <DirectoryView directory={filestructure} showDirectory={false} selected={props.selected}\n                           onFileSelected={props.onSelect}/>\n        </div>\n    )\n}\n\nexport default Filetree;\n","import React, {useState} from \"react\";\nimport {useSetRecoilState} from \"recoil\";\nimport state, {FileviewState, lockingFileviewState, StateAlike} from \"../../recoil/state\";\nimport css from './fileview.module.css';\nimport Filetree from \"../../components/filetree/filetree\";\n\nfunction Fileview(props: { state: StateAlike<FileviewState> }) {\n    const [selectedFile, setSelectedFile] = useState<string | null>(null);\n    const setState = useSetRecoilState(state);\n    const lock = () => {\n        setState(lockingFileviewState(props.state))\n    };\n\n    const files = props.state.content.map((file) => file.filepath);\n    const selectedContent = props.state.content.find((c) => c.filepath === selectedFile);\n\n    return (\n        <article className={css.fileview}>\n            <div className={css.logo}>\n                <img src={`${process.env.PUBLIC_URL}/lock__open.svg`} alt=\"Vault unlocked\" />\n                <span>Vault unlocked</span>\n            </div>\n            <header className={css.header}>\n                <p>Showing files in {props.state.file}</p>\n            </header>\n            <aside className={css.sidebar}>\n                <Filetree files={files} selected={selectedFile} onSelect={(file: string) => { setSelectedFile(file); }}/>\n            </aside>\n            <div className={css.buttons}>\n                <button className={css.lock_button} onClick={lock}>\n                    <img src={`${process.env.PUBLIC_URL}/lock.svg`} alt=\"Lock vault\" />\n                </button>\n            </div>\n            <main className={css.content}>\n                { selectedFile == null ? <h1>Select file</h1> : <pre className={css.content_view}>{selectedContent?.content}</pre>}\n            </main>\n        </article>\n    );\n}\n\nexport default Fileview;\n","export default __webpack_public_path__ + \"static/media/vault-flow.730e0c98.png\";","import React from 'react';\nimport diagram from './vault-flow.png';\nimport css from './about.module.css';\n\ninterface Props {\n    close: () => void;\n}\n\nfunction AboutContent(props: Props) {\n    return (\n        <section className={css.responsive_table}>\n            <h2>Encryption</h2>\n            <p>\n                Your <code>password</code> and <code>content</code> goes in, and out comes a hot mess of garbage\n                which only you can access (provided that the password is sufficiently secure).\n                But how does it actually achieve that?\n            </p>\n            <p>\n                First we generate a random 256-bit key (<code>K1</code>) using a random-number-generator (RNG),\n                follow by a 128-bit <code>salt</code>.\n                {' '}<code>K1</code> will be used to encrypt your content later on.\n                {' '}<code>Salt</code> will be used to securely transform your <code>password</code> into <i>crypto keys</i>.\n            </p>\n            <p>\n                Your <code>password</code> and <code>salt</code> is combined and passed through a <i>key derivation function </i>\n                in order to generate 512 bits of random data.\n                In this application we use <b>PBKDF2</b> with 100 000 iterations and <b>SHA-512</b> hashing for this purpose.\n            </p>\n            <p className=\"block-l\">\n                The 512 bits of data is then split into two 256-bit keys; <code>K2</code> and <code>K3</code>.\n                {' '}<code>K2</code> is used as the key to encrypt <code>K1</code> using <b>AES-GCM</b>{' '}\n                and a 256-bit random <code>IV</code> (initialization vector) yielding a value for <code>K1Encrypted</code>.\n            </p>\n            <table className=\"block-l\">\n                <caption>So far, we got the following random values generated;</caption>\n                <thead>\n                    <tr><th>Name</th><th>Private/Public</th><th>Description</th></tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>K1</td>\n                        <td>Private</td>\n                        <td>The encryption key used to encrypt the content, and must therefore be kept private.</td>\n                    </tr>\n                    <tr>\n                        <td>K2</td>\n                        <td>Private</td>\n                        <td>The encryption key used to encrypt <code>K1</code>, and must therefore be kept private.</td>\n                    </tr>\n                    <tr>\n                        <td>K3</td>\n                        <td>Public</td>\n                        <td>Used for password validation when trying to decrypt later on.</td>\n                    </tr>\n                    <tr>\n                        <td>K1Encrypted</td>\n                        <td>Public</td>\n                        <td>Encrypted version of <code>K1</code>, can be public since <code>K2</code> is needed to decrypt it.</td>\n                    </tr>\n                    <tr>\n                        <td>Salt</td>\n                        <td>Public</td>\n                        <td>Used for key-derivation, and is needed when decrypting later on.</td>\n                    </tr>\n                </tbody>\n            </table>\n\n            <p>\n                Final step is to encrypt the <code>content</code>.\n                This is done by using <code>K1</code> as the key and using <b>AES-GCM</b> and a 256-bit random <code>IV</code>.\n                Finally giving us what we want; our <code>encrypted content</code>.\n            </p>\n\n            <h2>Decryption</h2>\n            <p>\n                Given the public values from the table above (<code>K3</code>, <code>K1Encrypted</code>, and <code>Salt</code>),\n                a <code>password</code> and some <code>encrypted content</code>, we are able to decrypt the content if the password is correct.\n            </p>\n            <p>\n                The provided <code>password</code> and the <code>salt</code> is combined in a similar way to when we are encrypting data,\n                returning <code>K2</code> and <code>K3</code>.\n                The generated value for <code>K3</code> is then compared with the provided public value for <code>K3</code>.\n                If these does not match it means we have provided the wrong password, and the process halts.\n            </p>\n\n            <p>\n                Given that the two <code>K3</code> values matched, we use <code>K2</code> to decrypt <code>K1Encrypted</code> yielding us <code>K1</code>.\n                We now got all the values from the table above, including the <i>private ones</i>; <code>K1</code> and <code>K2</code>.\n                Decryption can therefore be completed by using <code>K1</code> and decrypting the <code>encrypted content</code>.\n            </p>\n\n            <h2>Diagram</h2>\n            <img src={diagram} alt=\"Diagram of how values flow\" />\n        </section>\n    )\n}\n\nexport default AboutContent;\n","import React, {useCallback, useState} from 'react';\nimport css from './about.module.css';\nimport Button from \"../button/button\";\nimport Modal from '../modal/modal';\nimport AboutContent from \"./about-content\";\n\ntype HtmlProps = React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\ninterface Props extends HtmlProps {\n    message: string;\n}\n\nfunction About(props: Props) {\n    const [isOpen, setIsOpen] = useState<boolean>(false);\n    const open = useCallback(() => setIsOpen(true), [setIsOpen]);\n    const close = useCallback(() => setIsOpen(false), [setIsOpen]);\n\n    return (\n        <section>\n            <Button linkstyling className={css.open_link} onClick={open}>\n                {props.message}\n            </Button>\n            <Modal isOpen={isOpen} onRequestClose={close} className={css.modal}>\n                <AboutContent close={close} />\n            </Modal>\n        </section>\n    )\n}\n\nAbout.defaultProps = {\n    message: 'How does it work?'\n}\n\nexport default About;\n","import React, {useState} from 'react';\nimport {useRecoilState, useRecoilValue} from \"recoil\";\nimport * as DB from './database';\nimport state, {fileviewState, initState, isFileviewAlike, listviewState, States} from \"./recoil/state\";\nimport {useAsyncEffect} from \"./hooks/use-async-effect\";\nimport EncryptedFiles from \"./views/encrypted-files/encrypted-files\";\nimport css from './application.module.css';\nimport LoadNew from \"./views/load-new/load-new\";\nimport cls from \"./components/cls\";\nimport CopyPasteContent from \"./views/load-new/copy-paste-content\";\nimport UploadContent from \"./views/load-new/upload-content\";\nimport LinkToContent from \"./views/load-new/link-to-content\";\nimport Fileview from \"./views/fileview/fileview\";\nimport {useDelayedEffect} from \"./hooks/use-delayed-effect\";\nimport About from \"./components/about/about\";\n\n(window as any).IDB = DB;\n\nfunction getView(state: States): React.ReactElement<{}> {\n    switch (state.key) {\n        case \"init\":\n            return <></>\n        case \"listview\":\n            return (\n                <>\n                    <EncryptedFiles state={state} className=\"block-s\"/>\n                    <About />\n                </>\n            );\n        case \"promptpassword\":\n            return <></>\n        case \"loadnew\":\n            return <LoadNew state={state}/>\n        case \"loadnew_copypaste\":\n            return <CopyPasteContent state={state}/>\n        case \"loadnew_linktofile\":\n            return <LinkToContent state={state}/>\n        case \"loadnew_uploadfile\":\n            return <UploadContent state={state}/>\n        case \"fileview\":\n        case \"fileview_loading\":\n        case \"fileview_locking\":\n            return <></>\n    }\n}\n\nfunction UnlockedLayer() {\n    const currentState = useRecoilValue(state);\n    if (isFileviewAlike(currentState)) {\n        return <Fileview state={currentState}/>\n    }\n    return null;\n}\n\ninterface OpeningLayerProps {\n    isOpening: boolean;\n    onComplete?: () => void;\n}\nfunction OpeningLayer(props: OpeningLayerProps) {\n    const { isOpening, onComplete } = props;\n    const [open, setOpen] = useState<boolean>(!isOpening);\n    useDelayedEffect(() => { setOpen(isOpening); }, 100, [setOpen, isOpening]);\n\n    return (\n        <div className={cls(css.opening_layer)}>\n            <header\n                className={cls(css.header, css.split_header, open ? css.split_header__open : null)}\n                onTransitionEnd={onComplete}\n            >\n                <div className={cls(css.pane, css.left_pane)}>\n                    <img\n                        src={`${process.env.PUBLIC_URL}/lock.svg`}\n                        className={cls(css.logo, css.logo_opening, 'block-m')}\n                        alt=\"splash screen of lock\"\n                    />\n                </div>\n                <div className={cls(css.pane, css.right_pane)} />\n            </header>\n        </div>\n    );\n}\n\nfunction LockedLayer() {\n    const [currentState, setState] = useRecoilState(state);\n    useAsyncEffect(async () => {\n        if (currentState.key === 'init') {\n            await new Promise((resolve) => setTimeout(resolve, 500));\n            const files = await DB.keys();\n            setState(listviewState({files}));\n        }\n    }, [currentState])\n\n    const view = getView(currentState);\n    const logoclass = css[`logo_${currentState.key}`];\n\n    if (currentState.key === 'fileview_loading') {\n        return <OpeningLayer isOpening={true} onComplete={() => setState(fileviewState(currentState))}/>;\n    } else if (currentState.key === 'fileview_locking') {\n        return <OpeningLayer isOpening={false} onComplete={() => setState(initState(currentState))}/>;\n    } else if (currentState.key === 'fileview') {\n        return null;\n    }\n\n    return (\n        <div className={css.application}>\n            <header className={css.header}>\n                <img\n                    src={`${process.env.PUBLIC_URL}/lock.svg`}\n                    className={cls(css.logo, logoclass, 'block-m')}\n                    alt=\"splash screen of lock\"\n                />\n            </header>\n            <main className={css.content}>\n                {view}\n            </main>\n        </div>\n    );\n}\n\nfunction Application() {\n    return (\n        <>\n            <UnlockedLayer />\n            <LockedLayer />\n        </>\n    );\n}\n\nexport default Application;\n","import {DependencyList, EffectCallback, useCallback, useEffect} from \"react\";\n\n/* eslint-disable react-hooks/exhaustive-deps */\nexport function useDelayedEffect(effect: EffectCallback, delay: number, deps: DependencyList) {\n    const memoized = useCallback(() => { setTimeout(effect, delay); }, deps);\n    useEffect(memoized, [memoized])\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { RecoilRoot } from \"recoil\";\nimport Application from './application';\n// import reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport './encryption/domain';\nimport { setAppElement } from './components/modal/modal'\n\nconst appRoot: HTMLElement = document.getElementById('root')!!;\nsetAppElement(appRoot);\n\nReactDOM.render(\n    <React.StrictMode>\n        <RecoilRoot>\n            <Application />\n        </RecoilRoot>\n    </React.StrictMode>,\n    appRoot\n);\n\n// reportWebVitals(console.log);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"filetree_wrapper__1cD2q\",\"directory_wrapper\":\"filetree_directory_wrapper__1YCQO\",\"directory\":\"filetree_directory__2IX_8\",\"directory_open\":\"filetree_directory_open__19-hG\",\"files_wrapper\":\"filetree_files_wrapper__1xC1x\",\"file\":\"filetree_file__206Zv\",\"file_selected\":\"filetree_file_selected__2ruYp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"open_link\":\"about_open_link__1ez1y\",\"modal\":\"about_modal__1jdnT\",\"responsive_table\":\"about_responsive_table__2JFen\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"box_box__2bgV5\",\"header\":\"box_header__1eqmQ\",\"content\":\"box_content__1ym2G\",\"footer\":\"box_footer__1geN8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__3_GL1\",\"flat\":\"button_flat__1gLBD\",\"linkstyling\":\"button_linkstyling__2_-n4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"user-popup-inputs_modal__3lirD\"};","import * as t from \"io-ts\";\n\n/* eslint-disable @typescript-eslint/no-redeclare */\nexport const EncodedEncryptedData = t.interface({\n    iv: t.string,\n    data: t.string\n});\nexport type EncodedEncryptedData = t.TypeOf<typeof EncodedEncryptedData>;\n\nexport const EncodedEncryptionConfigPublic = t.interface({\n    salt: t.string,\n    encryptedK1: EncodedEncryptedData,\n    k3: t.string\n});\nexport type EncodedEncryptionConfigPublic = t.TypeOf<typeof EncodedEncryptionConfigPublic>;\n\nexport const EncodedEncryptedContent = t.intersection([\n    EncodedEncryptionConfigPublic,\n    t.interface({\n        data: EncodedEncryptedData\n    })\n]);\nexport type EncodedEncryptedContent = t.TypeOf<typeof EncodedEncryptedContent>;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"no_content\":\"encrypted-files_no_content__2Gwqc\",\"link_button\":\"encrypted-files_link_button__2SudW\",\"link-button\":\"encrypted-files_link-button__2UkJO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list_of_files\":\"listview_list_of_files__2rdE9\",\"list_element\":\"listview_list_element__3K2-y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__1DF1f\",\"overlay\":\"modal_overlay__1kLsr\"};","/**\n * compare two binary arrays for equality\n * @param {(ArrayBuffer|ArrayBufferView)} a\n * @param {(ArrayBuffer|ArrayBufferView)} b\n */\n\nexport type BufferType = ArrayBuffer | ArrayBufferView;\nexport type TypedBuffer = Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array\nexport function equals(a: BufferType, b: BufferType) {\n    if (a instanceof ArrayBuffer) a = new Uint8Array(a, 0);\n    if (b instanceof ArrayBuffer) b = new Uint8Array(b, 0);\n    if (a.byteLength !== b.byteLength) return false;\n\n    const aTyped = a as TypedBuffer;\n    const bTyped = b as TypedBuffer;\n\n    if (aligned32(aTyped) && aligned32(bTyped))\n        return equal32(aTyped, bTyped);\n    if (aligned16(aTyped) && aligned16(bTyped))\n        return equal16(aTyped, bTyped);\n    return equal8(aTyped, bTyped);\n}\n\nfunction equal8(a: TypedBuffer, b: TypedBuffer) {\n    const ua = new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n    const ub = new Uint8Array(b.buffer, b.byteOffset, b.byteLength);\n    return compare(ua, ub);\n}\nfunction equal16(a: TypedBuffer, b: TypedBuffer) {\n    const ua = new Uint16Array(a.buffer, a.byteOffset, a.byteLength / 2);\n    const ub = new Uint16Array(b.buffer, b.byteOffset, b.byteLength / 2);\n    return compare(ua, ub);\n}\nfunction equal32(a: TypedBuffer, b: TypedBuffer) {\n    const ua = new Uint32Array(a.buffer, a.byteOffset, a.byteLength / 4);\n    const ub = new Uint32Array(b.buffer, b.byteOffset, b.byteLength / 4);\n    return compare(ua, ub);\n}\n\nfunction compare(a: TypedBuffer, b: TypedBuffer) {\n    for (let i = a.length; -1 < i; i -= 1) {\n        if ((a[i] !== b[i])) return false;\n    }\n    return true;\n}\n\nfunction aligned16(a: TypedBuffer) {\n    return (a.byteOffset % 2 === 0) && (a.byteLength % 2 === 0);\n}\n\nfunction aligned32(a: TypedBuffer) {\n    return (a.byteOffset % 4 === 0) && (a.byteLength % 4 === 0);\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"textinput_input__1yzwb\"};"],"sourceRoot":""}